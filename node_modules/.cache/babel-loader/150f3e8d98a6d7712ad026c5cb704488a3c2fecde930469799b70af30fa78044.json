{"ast":null,"code":"import React,{Component}from'react';import Spinner from'../spinner/Spinner';import ErrorMessage from'../errorMessage/ErrorMessage';import MarvelService from'../../services/MarvelService';import'./charList.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class CharList extends Component{constructor(){super(...arguments);this.state={charList:[],loading:true,error:false,newItemLoading:false,offset:null,charEnded:false};this.itemRefs=[];this.marvelService=new MarvelService();this.onRequest=offset=>{this.onCharListLoading();this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);};this.onCharListLoading=()=>{this.setState({newItemLoading:true});};this.onCharListLoaded=newCharList=>{let ended=false;if(newCharList.length<9){ended=true;}this.setState(_ref=>{let{offset,charList}=_ref;return{charList:[...charList,...newCharList],loading:false,newItemLoading:false,offset:offset+9,charEnded:ended};});};this.onError=()=>{this.setState({error:true,loading:false});};this.focusCard=id=>{this.itemRefs.forEach(ref=>ref.classList.remove('char__item_selected'));this.itemRefs[id].classList.add('char__item_selected');};}componentDidMount(){this.onRequest();}renderItems(arr){const items=arr.map((item,index)=>{let imgStyle={'objectFit':'cover'};if(item.thumbnail==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'){imgStyle={'objectFit':'unset'};}return/*#__PURE__*/_jsxs(\"li\",{className:\"char__item\",onClick:()=>{this.props.onCharSelected(item.id);this.focusCard(index);},ref:el=>this.itemRefs[index]=el,children:[/*#__PURE__*/_jsx(\"img\",{src:item.thumbnail,alt:item.name,style:imgStyle}),/*#__PURE__*/_jsx(\"div\",{className:\"char__name\",children:item.name})]},item.id);});return/*#__PURE__*/_jsx(\"ul\",{className:\"char__grid\",children:items});}render(){const{charList,loading,error,newItemLoading,offset,charEnded}=this.state;const items=this.renderItems(charList);const errorMessage=error?/*#__PURE__*/_jsx(ErrorMessage,{}):null;const spinner=loading?/*#__PURE__*/_jsx(Spinner,{}):null;const content=!(loading||error)?items:null;return/*#__PURE__*/_jsxs(\"div\",{className:\"char__list\",children:[errorMessage,spinner,content,/*#__PURE__*/_jsx(\"button\",{className:\"button button__main button__long\",disabled:newItemLoading,style:{'display':charEnded?'none':'block'},onClick:()=>this.onRequest(offset),children:/*#__PURE__*/_jsx(\"div\",{className:\"inner\",children:\"load more\"})})]});}}export default CharList;","map":{"version":3,"names":["React","Component","Spinner","ErrorMessage","MarvelService","jsx","_jsx","jsxs","_jsxs","CharList","constructor","arguments","state","charList","loading","error","newItemLoading","offset","charEnded","itemRefs","marvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","setState","newCharList","ended","length","_ref","focusCard","id","forEach","ref","classList","remove","add","componentDidMount","renderItems","arr","items","map","item","index","imgStyle","thumbnail","className","onClick","props","onCharSelected","el","children","src","alt","name","style","render","errorMessage","spinner","content","disabled"],"sources":["D:/marvel_starter/src/components/charList/CharList.js"],"sourcesContent":["import React, { Component } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\nimport PropTypes from 'prop-types'\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: null,\n        charEnded: false\n    }\n\n    itemRefs = [];\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n\n        this.setState(({ offset, charList }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    focusCard = (id) => {\n        this.itemRefs.forEach(ref => ref.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected')\n    }\n\n    renderItems(arr) {\n        const items = arr.map((item, index) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusCard(index);\n                    }}\n\n                    ref={el => this.itemRefs[index] = el}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n\n        const { charList, loading, error, newItemLoading, offset, charEnded } = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{ 'display': charEnded ? 'none' : 'block' }}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}